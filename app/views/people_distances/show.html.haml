- content_for :title do
  = @person_distance.person1.name
  and
  = @person_distance.person2.name
  have voted the same way
  = fraction_to_percentage_display(@person_distance.agreement_fraction_without_absences)
  of the time

%h1.long-title= yield :title

.page-header
  .row
    .col-sm-6
      .media= render "member", member: @person_distance.person1.latest_member
    .col-sm-6
      .media= render "member", member: @person_distance.person2.latest_member

  -# TODO: This is only roughly placed for the time being
  = render "social_share"

%section.page-section
  %p
    - start_date = [@person_distance.overlap_dates.first.begin, Division.date_earliest_division].max
    = capitalise_initial_character(formatted_date_range(start_date...@person_distance.overlap_dates.last.end, format: :words))

    = @person_distance.person1.name
    and
    = @person_distance.person2.name
    have voted in the same division
    = "#{pluralize(@person_distance.total_votes, "time")}."

    - if @person_distance.overlap_dates.first.begin < Division.date_earliest_division
      Our voting record only starts in #{formatted_month(Division.date_earliest_division)}.
      So we can only consider votes from then.

  = render "summary_vote_numbers", person_distance: @person_distance

%section.page-section
  = render "policies_intro"
  - if @person_distance.nvotesdiffer < @person_distance.nvotessame
    = render "comparison_all_different", person_distance: @person_distance, policies: @policies_all_different
    = render "comparison_different_and_same", person_distance: @person_distance, policies: @policies_different_and_same
    = render "comparison_all_same", person_distance: @person_distance, policies: @policies_all_same
  - else
    = render "comparison_all_same", person_distance: @person_distance, policies: @policies_all_same
    = render "comparison_different_and_same", person_distance: @person_distance, policies: @policies_different_and_same
    = render "comparison_all_different", person_distance: @person_distance, policies: @policies_all_different

- if @person_distance.nvotesdiffer < @person_distance.nvotessame
  = render "divisions_different", person_distance: @person_distance
- else
  = render "divisions_same", person_distance: @person_distance
