- content_for :title do
  = @person_distance.person1.full_name
  and
  = @person_distance.person2.full_name
  have voted the same way
  = fraction_to_percentage_display(@person_distance.agreement_fraction_without_absences)
  of the time

%h1.long-title= yield :title

.page-header
  .row
    .col-sm-6
      .media= render "member", member: @person_distance.person1.latest_member
    .col-sm-6
      .media= render "member", member: @person_distance.person2.latest_member

  -# TODO: This is only roughly placed for the time being
  = render "social_share"

%p
  - start_date = [@person_distance.overlap_dates.first.begin, Division.date_earliest_division].max
  = capitalise_initial_character(formatted_date_range(start_date...@person_distance.overlap_dates.last.end, format: :words))

  = @person_distance.person1.name
  and
  = @person_distance.person2.name
  have voted in the same division
  = "#{pluralize(@person_distance.total_votes, "time")}."

  - if @person_distance.overlap_dates.first.begin < Division.date_earliest_division
    Our voting record only starts in #{formatted_month(Division.date_earliest_division)}.
    So we can only consider votes from then.

%p
  - if @person_distance.nvotesdiffer > @person_distance.nvotessame
    = succeed "." do
      They have voted differently
      = pluralize(@person_distance.nvotesdiffer, "time")
    = succeed "." do
      - if @person_distance.nvotessame.zero?
        They have
        %strong never voted the same
      - else
        They have only voted
        %strong= "the same #{pluralize(@person_distance.nvotessame, "time")}"
  - else
    = succeed "." do
      They have voted the same
      = pluralize(@person_distance.nvotessame, "time")
    = succeed "." do
      - if @person_distance.nvotesdiffer.zero?
        They have
        %strong never voted differently
      - else
        They have only voted
        %strong= "differently #{pluralize(@person_distance.nvotesdiffer, "time")}"

- if @person_distance.nvotesdiffer < @person_distance.nvotessame
  - if @person_distance.nvotesdiffer.positive?
    %h2 Divisions in which they voted differently
    %ol.divisions-list.list-unstyled{class: active_house_for_list_class(nil)}
      - @person_distance.divisions_different.each do |division|
        - member1 = @person_distance.person1.member_in_division(division)
        - member2 = @person_distance.person2.member_in_division(division)
        = render 'divisions/division', members: [member1, member2], house: nil, division: division

  = render "comparison_block", person_distance: @person_distance, policies: @policies_all_different, title: "Always voted differently on"
  = render "comparison_block", person_distance: @person_distance, policies: @policies_different_and_same, title: "Voted a mixture of the same and differently on"
  = render "comparison_block", person_distance: @person_distance, policies: @policies_all_same, title: "Always voted the same way on"

- else
  - if @person_distance.nvotesdiffer.positive?
    %h2 Divisions in which they voted the same
    %ol.divisions-list.list-unstyled{class: active_house_for_list_class(nil)}
      - @person_distance.divisions_same.each do |division|
        - member1 = @person_distance.person1.member_in_division(division)
        - member2 = @person_distance.person2.member_in_division(division)
        = render 'divisions/division', members: [member1, member2], house: nil, division: division

  = render "comparison_block", person_distance: @person_distance, policies: @policies_all_same, title: "Always voted the same way on"
  = render "comparison_block", person_distance: @person_distance, policies: @policies_different_and_same, title: "Voted a mixture of the same and differently on"
  = render "comparison_block", person_distance: @person_distance, policies: @policies_all_different, title: "Always voted differently on"
